class VerMenu
!!!157061.java!!!	VerMenu(inout controller : GUIController)
		inicializarVerMenu();
		this.controlador = controller;
		
		this.controlador.registerMenuObserver(this);
		
		menu = controlador.getMenu();
		inicializarVentana();
		
		TipoPlatos[] tipoPlatos = TipoPlatos.values();
		for( TipoPlatos tPlato : tipoPlatos){
			nuevoTipoPlato(tPlato);	
		}
		this.setVisible(true);
!!!157189.java!!!	nuevoTipoPlato(inout tPlato : TipoPlatos) : void
		JPanel panel = new JPanel(new BorderLayout());		
		pestanyas.add(tPlato.toString(), panel);
		cadaPestanya.add(panel);
		
		JPanel opciones = new JPanel(new GridLayout());
		panel.add(opciones, BorderLayout.SOUTH);
		
		JButton anyadir = new JButton("add");
		anyadir.addActionListener(new ActionListener(){				
			@Override
			public void actionPerformed(ActionEvent e) {
				anyadirNuevoPlato();					
			}
		});
		JButton editar = new JButton("edit");
		editar.addActionListener(new ActionListener(){				
			@Override
			public void actionPerformed(ActionEvent e) {
				editarPlato();					
			}
		});
		JButton borrar = new JButton("remove");
		borrar.addActionListener(new ActionListener(){				
			@Override
			public void actionPerformed(ActionEvent e) {
				borrarPlato();					
			}
		});
		opciones.add(anyadir);
		opciones.add(editar);
		opciones.add(borrar);
		
		
		/**** Añade los platos correspondientes a un tipo de Plato	****/
		
		JPanel platos = new JPanel(new FlowLayout());
		platos.setName(tPlato.toString());
		panel.add(platos);
		ventanas.add(platos);
		
		ArrayList<Consumicion> consum = menu.getPlatos(tPlato);
		for( Consumicion cons: consum){
			/*	Habría que guardar las descripciones tb para mostrarlas	*/
			JToggleButton boton = new JToggleButton(cons.getNombre());
			botones.add(boton);
			platos.add(boton);
			boton.addActionListener(new ActionListener(){
				public void actionPerformed(ActionEvent e) {
					consumicionPulsada();				
				}
				
			});
		}	
		//añades los JtextFiel para las descripciones
		JTextField descrip = new JTextField();
		descrip.setMaximumSize(new Dimension(1,1));
		JScrollPane js = new JScrollPane(descrip);
		descrip.setEditable(false);
		panel.add(js, BorderLayout.NORTH);
		descriptions.add(descrip);
!!!157317.java!!!	inicializarVentana() : void
		
		panelGeneral = new JPanel();//Creamos el panel principal
		cardLayout = new CardLayout();
		panelGeneral.setLayout(cardLayout);
		
		pestanyas = new JTabbedPane();

		panelGeneral.add(pestanyas, "pestanyas");
		this.add(panelGeneral);
!!!157445.java!!!	inicializarVerMenu() : void
		this.setSize(400,500);
		JFrame.setDefaultLookAndFeelDecorated(true);
	    JDialog.setDefaultLookAndFeelDecorated(true);
	    try {
	    	UIManager.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");
			//.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Exception e) {}
		this.botones = new ArrayList<JToggleButton>();
		ventanas = new ArrayList<JPanel>();
		cadaPestanya = new ArrayList<JPanel>();
		this.descriptions = new ArrayList<JTextField>();
!!!157573.java!!!	borrarPlato() : void
		if(this.consumicionSeleccionada!=null)
			this.controlador.deleteConsumicion(menu.getConsumicion(consumicionSeleccionada.getText()));
		else notificar("Se debe seleccionar el plato a borrar");
!!!157701.java!!!	editarPlato() : void
		if(this.consumicionSeleccionada!=null){
			//System.out.println(consumicionSeleccionada.getText() + " debe ser editado");
			ConsumicionSwing nuevaCons = new ConsumicionSwing(this, controlador, menu.getConsumicion(consumicionSeleccionada.getText()), true);
			panelGeneral.add(nuevaCons , "editConsumicion");
			cardLayout.show(panelGeneral, "editConsumicion");
		}else notificar("Se debe seleccionar el plato a editar");
!!!157829.java!!!	anyadirNuevoPlato() : void
		ConsumicionSwing nuevaCons = new ConsumicionSwing(this, controlador, null, false);
		panelGeneral.add(nuevaCons , "createConsumicion");
		cardLayout.show(panelGeneral, "createConsumicion");
!!!157957.java!!!	consumicionPulsada() : void
		for( JToggleButton boton: botones)
			if(!boton.isFocusOwner())	//
				boton.setSelected(false);
			else{
				consumicionSeleccionada = boton;
				mostrarDescripcion(menu.getConsumicion(boton.getText()).getDescripcion());
			}
!!!158085.java!!!	mostrarDescripcion(in description : String) : void
		for(JTextField jText: descriptions)
			jText.setText(description);	
!!!158213.java!!!	devolverControlPrincipal() : void
		cardLayout.show(panelGeneral, "pestanyas");
!!!158341.java!!!	notificar(in message : String) : void
		JOptionPane.showMessageDialog(this, message);
!!!158469.java!!!	buscarBoton(in name : String) : JToggleButton
		for(JToggleButton bot: botones){
			if(bot.getText().equals(name)) return bot;
		}
		return null;
!!!158597.java!!!	borrarBoton(in nameBoton : String, in nameTipo : String) : void
		JToggleButton botonParaBorrar = buscarBoton(nameBoton);
		if(botonParaBorrar!=null){
			JPanel pan = buscarPanel(nameTipo);
			pan.remove(botonParaBorrar);
			pan.repaint();
		}
!!!158725.java!!!	buscarPanel(in namePanel : String) : JPanel
		for(JPanel panel:  ventanas){
			if(panel.getName().equals(namePanel))return panel;
		}
		return null;
!!!158853.java!!!	anyadirBoton(in consId : String, in tipo : String) : void
		JToggleButton boton = new JToggleButton(consId);
		botones.add(boton);
		JPanel platos = buscarPanel(tipo);
		platos.add(boton);
		boton.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e) {
				consumicionPulsada();				
			}
			
		});
		platos.repaint();
!!!158981.java!!!	addConsumption(in consId : String, in tipo : String) : void
		anyadirBoton(consId, tipo);
!!!159109.java!!!	deleteConsumption(in consId : String, in tipo : String) : void
		borrarBoton(consId, tipo);
!!!159237.java!!!	editConsumption(in nameAnt : String, in nameNuevo : String, in tipoAnt : String, in tipoNuevo : String) : void
			deleteConsumption(nameAnt, tipoAnt);
			anyadirBoton(nameNuevo, tipoNuevo);
